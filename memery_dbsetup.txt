Drop Table IF EXISTS keyword_tags;
Drop Table IF EXISTS group_tags;
Drop Table IF EXSITS comments_vote;
Drop Table IF EXSITS comments;
Drop Table IF EXISTS memes_vote;
Drop Table IF EXISTS memes;
Drop Table IF EXISTS templates;
Drop Table IF EXSITS group_relations;
Drop Table IF EXISTS groups;
Drop Table IF EXISTS users;

CREATE TABLE users(
id INT NOT NULL AUTO_INCREMENT,
username varchar(64) NOT NULL default '',
password char(64) binary NOT NULL default '',
first_name varchar(64) NOT NULL default '',
last_name varchar(64) NOT NULL default '',
nickname varchar(64),
created_at DATETIME NOT NULL,
last_login DATETIME,
cookie char(64) binary NOT NULL default '',
session char(64) binary NOT NULL default '',
ip varchar(16) binary NOT NULL default '',
PRIMARY KEY (id),
UNIQUE KEY username (username),
UNIQUE KEY nickname (nickname)
);


CREATE TABLE groups(
id INT NOT NULL AUTO_INCREMENT,
groupname varchar(64) NOT NULL default 'unnamed',
description varchar(128),
group_pic varchar(64),
privacy TINYINT NOT NULL default 0,
created_by INT NOT NULL,
created_at DATETIME NOT NULL,
PRIMARY KEY(id),
FOREIGN KEY(created_by) references users(id)
);

CREATE TABLE group_relations(
group_id INT NOT NULL ,
user_id INT NOT NULL,
created_at DATETIME NOT NULL,
FOREIGN KEY(group_id) references groups(id),
FOREIGN KEY(user_id) references users(id),
UNIQUE KEY relations(group_id, user_id)
);


CREATE TABLE templates(
id INT NOT NULL AUTO_INCREMENT,
name varchar(64) NOT NULL default 'unnamed',
src varchar(64) NOT NULL,
created_by INT NOT NULL,
created_at DATETIME NOT NULL,
crop_x0 INT default 0,
crop_y0 INT default 0,
crop_x1 INT default 100,
crop_y1 INT default 100,
PRIMARY KEY(id),
UNIQUE KEY(src),
FOREIGN KEY(created_by) references users(id)
);

CREATE TABLE memes(
id INT NOT NULL AUTO_INCREMENT,
title varchar(64) NOT NULL default 'unnamed',
template_id INT NOT NULL,
created_by INT NOT NULL,
created_at DATETIME NOT NULL,
text_top varchar(128),
text_bot varchar(128),
privacy TINYINT NOT NULL default 0,
views INT NOT NULL default 0,
PRIMARY KEY(id),
FOREIGN KEY(template_id) references templates(id),
FOREIGN KEY(created_by) references users(id)
);

CREATE TABLE memes_vote(
meme_id INT NOT NULL,
user_id INT NOT NULL,
vote TINYINT NOT NULL,
FOREIGN KEY(meme_id) references memes(id),
FOREIGN KEY(user_id) references users(id),
UNIQUE KEY relations(meme_id, user_id)
);

CREATE TABLE comments(
id INT NOT NULL AUTO_INCREMENT,
user_id INT NOT NULL,
meme_id INT NOT NULL,
created_at DATETIME NOT NULL,
text varchar(128),
PRIMARY KEY(id),
FOREIGN KEY(meme_id) references memes(id),
FOREIGN KEY(user_id) references users(id)
);

CREATE TABLE comments_vote(
comment_id INT NOT NULL,
user_id INT NOT NULL,
vote TINYINT NOT NULL,
FOREIGN KEY(comment_id) references comments(id),
FOREIGN KEY(user_id) references users(id),
UNIQUE KEY relations(comment_id, user_id)
);

CREATE TABLE group_tags(
meme_id INT NOT NULL,
group_id INT NOT NULL,
FOREIGN KEY(meme_id) references memes(id),
FOREIGN KEY(group_id) references groups(id)
);

CREATE TABLE keyword_tags(
meme_id INT NOT NULL,
keyword varchar(32) NOT NULL,
FOREIGN KEY(meme_id) references memes(id)
);